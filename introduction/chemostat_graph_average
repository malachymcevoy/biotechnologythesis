using CSV, DataFrames, Plots, Statistics

#region < Read and compile the flux ring CSV files >
flux_ring1_data = CSV.read("introduction/Chemostat_data/flux_ring1.csv", DataFrame, delim='\t')
flux_ring2_data = CSV.read("introduction/Chemostat_data/flux_ring2.csv", DataFrame, delim='\t')
flux_ring3_data = CSV.read("introduction/Chemostat_data/flux_ring3.csv", DataFrame, delim='\t')
flux_ring4_data = CSV.read("introduction/Chemostat_data/flux_ring4.csv", DataFrame, delim='\t')
flux_ring5_data = CSV.read("introduction/Chemostat_data/flux_ring5.csv", DataFrame, delim='\t')
flux_ring6_data = CSV.read("introduction/Chemostat_data/flux_ring6.csv", DataFrame, delim='\t')
flux_ring7_data = CSV.read("introduction/Chemostat_data/flux_ring7.csv", DataFrame, delim='\t')
flux_ring8_data = CSV.read("introduction/Chemostat_data/flux_ring8.csv", DataFrame, delim='\t')

rename!(flux_ring1_data, ncol(flux_ring1_data)-1 => "flux_ring1_value",
                            ncol(flux_ring1_data)   => "flux_ring1_error")
rename!(flux_ring2_data, ncol(flux_ring2_data)-1 => "flux_ring2_value",
                            ncol(flux_ring2_data)   => "flux_ring2_error")
rename!(flux_ring3_data, ncol(flux_ring3_data)-1 => "flux_ring3_value",
                            ncol(flux_ring3_data)   => "flux_ring3_error")
rename!(flux_ring4_data, ncol(flux_ring4_data)-1 => "flux_ring4_value",
                            ncol(flux_ring4_data)   => "flux_ring4_error")
rename!(flux_ring5_data, ncol(flux_ring5_data)-1 => "flux_ring5_value",
                            ncol(flux_ring5_data)   => "flux_ring5_error")
rename!(flux_ring6_data, ncol(flux_ring6_data)-1 => "flux_ring6_value",
                            ncol(flux_ring6_data)   => "flux_ring6_error")
rename!(flux_ring7_data, ncol(flux_ring7_data)-1 => "flux_ring7_value",
                            ncol(flux_ring7_data)   => "flux_ring7_error")
rename!(flux_ring8_data, ncol(flux_ring8_data)-1 => "flux_ring8_value",
                            ncol(flux_ring8_data)   => "flux_ring8_error")

function shift_down(df)
    new_row = DataFrame([(colname => 0.0) for colname in names(df)]...)
    return vcat(new_row, df)
end

flux_ring1_data = shift_down(flux_ring1_data)
flux_ring2_data = shift_down(flux_ring2_data)
flux_ring3_data = shift_down(flux_ring3_data)
flux_ring4_data = shift_down(flux_ring4_data)
flux_ring5_data = shift_down(flux_ring5_data)
flux_ring6_data = shift_down(flux_ring6_data)
flux_ring7_data = shift_down(flux_ring7_data)
flux_ring8_data = shift_down(flux_ring8_data)

flux_ring1_last_two = flux_ring1_data[:, end-1:end]
flux_ring2_last_two = flux_ring2_data[:, end-1:end]
flux_ring3_last_two = flux_ring3_data[:, end-1:end]
flux_ring4_last_two = flux_ring4_data[:, end-1:end]
flux_ring5_last_two = flux_ring5_data[:, end-1:end]
flux_ring6_last_two = flux_ring6_data[:, end-1:end]
flux_ring7_last_two = flux_ring7_data[:, end-1:end]
flux_ring8_last_two = flux_ring8_data[:, end-1:end]

# Select relevant columns
selected_df = select(combined_df, [
    "flux_ring1_value", "flux_ring1_error",
    "flux_ring3_value", "flux_ring3_error",
    "flux_ring5_value", "flux_ring5_error",
    "flux_ring7_value", "flux_ring7_error"
])

# Convert all values to µM
for col in names(selected_df)
    selected_df[!, col] ./= constant
end

# Compute average values and combined error
num_points = nrow(selected_df)
avg_values = Vector{Float64}(undef, num_points)
avg_errors = Vector{Float64}(undef, num_points)

for i in 1:num_points
    vals = [selected_df[i, j] for j in (1, 3, 5, 7)]
    errs = [selected_df[i, j] for j in (2, 4, 6, 8)]

    avg_values[i] = mean(vals)
    avg_errors[i] = sqrt(sum(e.^2 for e in errs)) / length(errs)  # RMS / N
end

# Plotting
x_values = (0:num_points-1) * 20 / 60  # Assuming 20 min intervals

flux_fig = plot(size=(1000, 700), left_margin=5Plots.mm, bottom_margin=5Plots.mm,
                legend=false, xlabel="Time (hours)", ylabel="GFP concentration (µM)")

scatter!(flux_fig, x_values, avg_values, yerr=avg_errors, markersize=6, markerstrokewidth=0.5, color=:green)

gr(fmt=:png, dpi=300)
savefig("flux_fig")