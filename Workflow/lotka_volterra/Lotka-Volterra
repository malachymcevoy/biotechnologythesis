using Plots, DifferentialEquations, Optim

function lotka_volterra(du, u, p, t)
    α, β, γ, δ = p
    x, y = u
    
    du[1] = α * x - β * x * y   # Prey population equation
    du[2] = -γ * y + δ * x * y  # Predator population equation
end

init = [5, 5] 
params = [0.08, 1.0, 3.0, 1.0]
t_end = 100
tspan = (0.0, t_end)  

prob = ODEProblem(lotka_volterra, init, tspan, params; isoutofdomain=(u, p, t) -> any(x -> x < 0, u))
sol = solve(prob, Tsit5())

peak_prey = maximum([u[1] for u in sol.u])
peak_pred = maximum([u[2] for u in sol.u])

println("The peak prey number using ", params[1], " as α is ", peak_prey)
# println("Peak predator number = ", peak_pred)

prey_vals = [u[1] for u in sol.u]
pred_vals = [u[2] for u in sol.u]

plt1 = plot(sol.t, prey_vals, label="Prey", linewidth=2, xlabel="Time", ylabel="Population", title="Population vs. Time", size=(600,400), xlims=(0,t_end))
plot!(sol.t, pred_vals, label="Predator", linewidth=2)

plot(plt1, size=(1200,550))