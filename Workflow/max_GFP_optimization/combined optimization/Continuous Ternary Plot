using DifferentialEquations, DiffEqCallbacks, Plots, TernaryPlots, Colors

function model!(du, u, p, t)
    qx, ng, ql, nG, ein, mu, Din, kb, ku, kd, km, Rin, ktx, Ktx, ktl, Ktl = p
    e, D, m, cl, G, Gm, R = u

    vtx = D * (ktx / ng) * (e / (Ktx + e))
    vtl = cl * (ktl / nG) * (e / (Ktl + e))

    du[1] = - (vtx * qx * ng + vtl * ql * nG) + ein - mu * e
    du[2] = Din - mu * D
    du[3] = vtx - kb * R * m + ku * cl + vtl - kd * m - mu * m
    du[4] = kb * R * m - ku * cl - vtl - kd * cl - mu * cl
    du[5] = vtl - km * G - mu * G
    du[6] = km * G - mu * Gm
    du[7] = -kb * R * m + ku * cl + vtl + kd * cl + Rin - mu * R
end

function run_simulation(dna_conc, energy_conc, tau)
    initial_conditions = [energy_conc, dna_conc, 0.0, 0.0, 0.0, 0.0, 1.51]
    params = [2.0, 833.0, 4.0, 236.0, 33600.0 * (0.2 / tau), (0.2 / tau), 0.005 * (0.2 / tau),
            1000.0, 1.0, 0.038153465, 0.084, 1.51 * (0.2 / tau), 3750.0, 54.75, 105.0, 100.0]

    prob = ODEProblem(model!, initial_conditions, (0.0, 1000.0), params)
    sol = solve(prob, RadauIIA5(), saveat=1.0)   
    
    return sol[5, end]
end

function create_ternary_plot()
    # Create a grid of values for DNA, energy, and tau
    dna_conc_vals = 0.001:0.001:0.01
    energy_conc_vals = 30000:10000:60000
    tau_vals = 10:10:150

    # Create arrays to store the corresponding GFP production values
    gfp_vals = Float64[]

    # Loop over all combinations of dna_conc, energy_conc, and tau
    for dna_conc in dna_conc_vals
        for energy_conc in energy_conc_vals
            for tau in tau_vals
                gfp = run_simulation(dna_conc, energy_conc, tau)  # Run the simulation for the current set of parameters
                push!(gfp_vals, gfp)  # Store the GFP production value
            end
        end
    end

    # Create the ternary plot
    ternarycontourf(dna_conc_vals, energy_conc_vals, tau_vals, gfp_vals, xlabel="DNA Concentration", ylabel="Energy Concentration", zlabel="Tau")
end

# Call the function to create the ternary plot
create_ternary_plot()