using Plots, DifferentialEquations, Optim, OptimizationOptimJL, Optimization, Zygote, SciMLSensitivity, LineSearches

function lotka_volterra(du, u, p, t)
    α, β, γ, δ = p
    x, y = u
    du[1] = α * x - β * x * y   # Prey population equation
    du[2] = -γ * y + δ * x * y  # Predator population equation
end

function h(u,p)
	α = u[1] # Optimization variable (α population)
	β, γ, δ = p[1:3]
	x0 = p[4]
	y0 = p[5] # this is the fixed initial predator population
	tspan = (0.0, 100.0) # the time span for the simulation

	u0 = [x0, y0]
	
	#solve the ODE
	prob = ODEProblem(lotka_volterra, u0, tspan, [α, β, γ, δ])
	sol = solve(prob)

	#extract the peak prey population
	peak_prey = maximum(sol[1, :])

	# the function needs to return the peak prey
	return -peak_prey
end

# define parameters
p_α = [1.0, 3.0, 1.0, 5, 5] # β, γ, δ, prey_init, pred_init
u0_α = [1.0]
lb_α = [0.25]
ub_α = [3.0]

opt_func_α = OptimizationFunction(h, AutoZygote())
opt_prob_α = OptimizationProblem(opt_func_α, u0_α, p_α; lb=lb_α, ub=ub_α)

sol_α = solve(opt_prob_α, LBFGS(); g_tol=1e-10)