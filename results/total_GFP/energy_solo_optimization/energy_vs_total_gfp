using DataFrames, DifferentialEquations, Plots, Optimization, OptimizationOptimJL, OptimizationBBO, Zygote

function model!(du, u, p, t)
    qx, ng, ql, nG, ein, mu, Din_init, kb, ku, kd, km, Rin, ktx, Ktx, ktl, Ktl = p
    e, D, m, cl, G, Gm, R = u

    Din = t < 540 ? Din_init : 0.0

    vtx = D * (ktx / ng) * (e / (Ktx + e))
    vtl = cl * (ktl / nG) * (e / (Ktl + e))

    du[1] = - (vtx * qx * ng + vtl * ql * nG) + ein - mu * e  # Energy balance
    du[2] = Din - mu * D
    du[3] = vtx - kb * R * m + ku * cl + vtl - kd * m - mu * m
    du[4] = kb * R * m - ku * cl - vtl - kd * cl - mu * cl
    du[5] = vtl - km * G - mu * G
    du[6] = km * G - mu * Gm
    du[7] = -kb * R * m + ku * cl + vtl + kd * cl + Rin - mu * R
end

initial_conditions = [33600, 0.005, 0.0, 0.0, 0.0, 0.0, 1.51]
params = [2.0, 833.0, 4.0, 236.0, initial_conditions[1] * (0.2 / 20.0), (0.2 / 20.0), 0.005 * (0.2 / 20.0),
          1000.0, 1.0, 0.038153465, 0.084, 1.51 * (0.2 / 20.0), 3750.0, 54.75, 105.0, 100.0]

e0_range = range(0.0, 60000.0, length=1000)
total_Gm_values = Float64[]

for e0 in e0_range
    init_cond = copy(initial_conditions)
    init_cond[1] = e0

    new_params = copy(params)
    new_params[5] = e0 * (0.2 / 20.0)  # Ensure ein scales properly

    # Solve ODE
    prob = ODEProblem(model!, init_cond, (0.0, 1000.0), new_params)
    sol = solve(prob, RadauIIA5(), saveat=1.0)

    # Calculate and store the total GFP produced
    total_gfp_produced = sum(sol[6, :])
    push!(total_Gm_values, total_gfp_produced)
end

# Find the energy value with maximum total GFP production
max_total_gfp = maximum(total_Gm_values)
max_index = argmax(total_Gm_values)
energy_at_max_gfp = e0_range[max_index]

println("Energy value for maximum total GFP production: $(energy_at_max_gfp) µM")
println("Maximum total GFP produced: $(max_total_gfp) µM")

# Plot total GFP production vs initial energy concentration
GFP_vs_energy_fig = plot(e0_range, total_Gm_values, label="Total GFP Produced",
                         xlabel="Initial Energy Concentration (μM)",
                         ylabel="Total GFP (μM)",
                         title="Total GFP Production vs Initial Energy",
                         linewidth=2, legend=:topleft)

savefig("energy_vs_total_gfp")
